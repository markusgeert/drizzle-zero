/* eslint-disable */
/* tslint:disable */
// noinspection JSUnusedGlobalSymbols
/*
 * ------------------------------------------------------------
 * ## This file was automatically generated by drizzle-zero. ##
 * ## Any changes you make to this file will be overwritten. ##
 * ##                                                        ##
 * ## Additionally, you should also exclude this file from   ##
 * ## your linter and/or formatter to prevent it from being  ##
 * ## checked or modified.                                   ##
 * ##                                                        ##
 * ## SOURCE: https://github.com/BriefHQ/drizzle-zero        ##
 * ------------------------------------------------------------
 */

import type { DrizzleToZeroSchema, ZeroCustomType } from "drizzle-zero";
import type * as drizzleSchema from "./drizzle/schema";

type ZeroSchema = DrizzleToZeroSchema<typeof drizzleSchema, "snake_case">;

/**
 * The Zero schema object.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const schema = {
  tables: {
    allTypes: {
      name: "allTypes",
      columns: {
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "createdAt"
          >,
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "updatedAt"
          >,
        },
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "id"
          >,
        },
        smallintField: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "smallintField"
          >,
          serverName: "smallint",
        },
        integerField: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "integerField"
          >,
          serverName: "integer",
        },
        bigintField: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "bigintField"
          >,
          serverName: "bigint",
        },
        bigintNumberField: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "bigintNumberField"
          >,
          serverName: "bigint_number",
        },
        smallSerialField: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "smallSerialField"
          >,
          serverName: "smallserial",
        },
        serialField: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "serialField"
          >,
          serverName: "serial",
        },
        bigSerialField: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "bigSerialField"
          >,
          serverName: "bigserial",
        },
        numericField: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "numericField"
          >,
          serverName: "numeric",
        },
        decimalField: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "decimalField"
          >,
          serverName: "decimal",
        },
        realField: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "realField"
          >,
          serverName: "real",
        },
        doublePrecisionField: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "doublePrecisionField"
          >,
          serverName: "double_precision",
        },
        textField: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "textField"
          >,
          serverName: "text",
        },
        charField: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "charField"
          >,
          serverName: "char",
        },
        uuidField: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "uuidField"
          >,
          serverName: "uuid",
        },
        varcharField: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "varcharField"
          >,
          serverName: "varchar",
        },
        booleanField: {
          type: "boolean",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "booleanField"
          >,
          serverName: "boolean",
        },
        timestampField: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "timestampField"
          >,
          serverName: "timestamp",
        },
        timestampTzField: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "timestampTzField"
          >,
          serverName: "timestamp_tz",
        },
        timestampModeString: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "timestampModeString"
          >,
          serverName: "timestamp_mode_string",
        },
        timestampModeDate: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "timestampModeDate"
          >,
          serverName: "timestamp_mode_date",
        },
        dateField: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "dateField"
          >,
          serverName: "date",
        },
        jsonField: {
          type: "json",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "jsonField"
          >,
          serverName: "json",
        },
        jsonbField: {
          type: "json",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "jsonbField"
          >,
          serverName: "jsonb",
        },
        typedJsonField: {
          type: "json",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "typedJsonField"
          >,
          serverName: "typed_json",
        },
        statusField: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "statusField"
          >,
          serverName: "status",
        },
        optionalSmallint: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "optionalSmallint"
          >,
          serverName: "optional_smallint",
        },
        optionalInteger: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "optionalInteger"
          >,
          serverName: "optional_integer",
        },
        optionalBigint: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "optionalBigint"
          >,
          serverName: "optional_bigint",
        },
        optionalNumeric: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "optionalNumeric"
          >,
          serverName: "optional_numeric",
        },
        optionalReal: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "optionalReal"
          >,
          serverName: "optional_real",
        },
        optionalDoublePrecision: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "optionalDoublePrecision"
          >,
          serverName: "optional_double_precision",
        },
        optionalText: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "optionalText"
          >,
          serverName: "optional_text",
        },
        optionalBoolean: {
          type: "boolean",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "optionalBoolean"
          >,
          serverName: "optional_boolean",
        },
        optionalTimestamp: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "optionalTimestamp"
          >,
          serverName: "optional_timestamp",
        },
        optionalJson: {
          type: "json",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "optionalJson"
          >,
          serverName: "optional_json",
        },
        optionalEnum: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "optionalEnum"
          >,
          serverName: "optional_enum",
        },
        optionalVarchar: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "optionalVarchar"
          >,
          serverName: "optional_varchar",
        },
        optionalUuid: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "allTypes",
            "optionalUuid"
          >,
          serverName: "optional_uuid",
        },
      },
      primaryKey: ["id"],
      serverName: "all_types",
    },
    filters: {
      name: "filters",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "filters",
            "id"
          >,
        },
        name: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "filters",
            "name"
          >,
        },
        parentId: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "filters",
            "parentId"
          >,
          serverName: "parent_id",
        },
      },
      primaryKey: ["id"],
    },
    friendship: {
      name: "friendship",
      columns: {
        requestingId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "friendship",
            "requestingId"
          >,
          serverName: "requesting_id",
        },
        acceptingId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "friendship",
            "acceptingId"
          >,
          serverName: "accepting_id",
        },
        accepted: {
          type: "boolean",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "friendship",
            "accepted"
          >,
        },
      },
      primaryKey: ["requestingId", "acceptingId"],
    },
    medium: {
      name: "medium",
      columns: {
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "medium",
            "createdAt"
          >,
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "medium",
            "updatedAt"
          >,
        },
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "medium",
            "id"
          >,
        },
        name: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "medium",
            "name"
          >,
        },
      },
      primaryKey: ["id"],
    },
    message: {
      name: "message",
      columns: {
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "message",
            "createdAt"
          >,
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "message",
            "updatedAt"
          >,
        },
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "message",
            "id"
          >,
        },
        senderId: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "message",
            "senderId"
          >,
        },
        mediumId: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "message",
            "mediumId"
          >,
        },
        body: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "message",
            "body"
          >,
        },
        metadata: {
          type: "json",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "message",
            "metadata"
          >,
        },
      },
      primaryKey: ["id"],
    },
    user: {
      name: "user",
      columns: {
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "createdAt"
          >,
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "updatedAt"
          >,
        },
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "id"
          >,
        },
        name: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "name"
          >,
        },
        partner: {
          type: "boolean",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "partner"
          >,
        },
        email: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "email"
          >,
        },
        customTypeJson: {
          type: "json",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "customTypeJson"
          >,
          serverName: "custom_type_json",
        },
        customInterfaceJson: {
          type: "json",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "customInterfaceJson"
          >,
          serverName: "custom_interface_json",
        },
        testInterface: {
          type: "json",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "testInterface"
          >,
          serverName: "test_interface",
        },
        testType: {
          type: "json",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "testType"
          >,
          serverName: "test_type",
        },
        testExportedType: {
          type: "json",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "testExportedType"
          >,
          serverName: "test_exported_type",
        },
        status: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "user",
            "status"
          >,
        },
      },
      primaryKey: ["id"],
    },
  },
  relationships: {
    filters: {
      parent: [
        {
          sourceField: ["parentId"],
          destField: ["id"],
          destSchema: "filters",
          cardinality: "one",
        },
      ],
      children: [
        {
          sourceField: ["id"],
          destField: ["parentId"],
          destSchema: "filters",
          cardinality: "many",
        },
      ],
    },
    medium: {
      messages: [
        {
          sourceField: ["id"],
          destField: ["mediumId"],
          destSchema: "message",
          cardinality: "many",
        },
      ],
    },
    message: {
      medium: [
        {
          sourceField: ["mediumId"],
          destField: ["id"],
          destSchema: "medium",
          cardinality: "one",
        },
      ],
      sender: [
        {
          sourceField: ["senderId"],
          destField: ["id"],
          destSchema: "user",
          cardinality: "one",
        },
      ],
    },
    user: {
      messages: [
        {
          sourceField: ["id"],
          destField: ["senderId"],
          destSchema: "message",
          cardinality: "many",
        },
      ],
    },
  },
} as const;

/**
 * Represents the Zero schema type.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Schema = typeof schema;
